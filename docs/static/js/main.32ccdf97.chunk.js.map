{"version":3,"sources":["Components/AddCategory.js","helpers/getIGift.js","Components/GiftGridItem.js","Components/GiftGrid.js","hooks/useFetchGift.js","Components/GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGift","a","category","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GiftGridItem","className","src","alt","GiftGrid","loading","state","setstate","useEffect","then","imgs","useFetchGift","imagen","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAoCeA,MAjCf,YAAuC,IAAjBC,EAAgB,EAAhBA,cAAgB,EAEEC,mBAAS,IAFX,mBAE3BC,EAF2B,KAEfC,EAFe,KAiBlC,OAEI,sBAAMC,SAXU,SAACC,GACjBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAG,OAAKP,GAAL,mBAAmBO,OACpCN,EAAc,MAOlB,SACI,uBAAOO,KAAK,OACZC,MAAOT,EACPU,SAlBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAE,uCAAAC,EAAA,6DAAOC,EAAP,EAAOA,SACnBC,EADY,iDACmCC,UAAUF,GAD7C,+DAEAG,MAAMF,GAFN,cAEZG,EAFY,gBAGEA,EAAKC,OAHP,uBAGXC,EAHW,EAGXA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAIQ,EAAIG,OAAOC,iBAAiBZ,QARtB,kBAYXM,GAZW,4CAAF,sD,MCYLO,MATf,YAAsC,EAAfJ,GAAgB,IAAbC,EAAY,EAAZA,MAAMV,EAAM,EAANA,IAC5B,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCgBDO,MAnBf,YAA+B,IAAZlB,EAAW,EAAXA,SAAW,ECDH,SAACA,GAAa,IAAD,EAEVf,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAJwB,mBAE7BC,EAF6B,KAEtBC,EAFsB,KAsBpC,OAdAC,qBAAU,WAENxB,EAAQ,CAACE,aAAWuB,MACpB,SAAAC,GACIH,EAAS,CACTf,KAAKkB,EACLL,SAAQ,SAMX,CAACnB,IAECoB,EDnBqBK,CAAazB,GAA7BY,EAFc,EAEnBN,KAAYa,EAFO,EAEPA,QAGnB,OACI,qCACA,6BAAKnB,IACL,sBAAKe,UAAU,YAAf,UACCI,GAAU,wCACNP,EAAOJ,KAAI,SAACkB,GAAD,OACR,cAAC,EAAD,eAAkCA,GAAfA,EAAOhB,cEY3BiB,MAvBf,WAA0B,IAAD,EAEe1C,mBAAS,CAAC,cAFzB,mBAEd2C,EAFc,KAEF5C,EAFE,KAOrB,OACI,qCACC,gDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEO4C,EAAWpB,KAAI,SAAAR,GAAQ,OAEnB,cAAC,EAAD,CAAyBA,SAAUA,GAApBA,U,MCZnC6B,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.32ccdf97.chunk.js","sourcesContent":["import React ,{useState} from 'react'\r\nimport Proptypes from \"prop-types\" \r\n\r\nfunction AddCategory({setCategories}) {\r\n    \r\n    const [inputValue, setInputValue] = useState(\"\");\r\n\r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n    }    \r\n\r\n    const handleSubmit= (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length>2){\r\n            setCategories(cat => [inputValue,...cat]);\r\n            setInputValue(\"\");\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" \r\n            value={inputValue}\r\n            onChange={handleInputChange}    \r\n            />\r\n         </form>   \r\n        \r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategories:Proptypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","export const getGift= async({category}) =>{\r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)}&limit=10&api_key=VOsLOxnqMpA6GZb63N68jDbVJfjcaoZv`\r\n    const resp= await fetch(url);\r\n    const {data}= await resp.json();\r\n    const gifs = data.map(img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url:img.images.downsized_medium.url,\r\n        }\r\n\r\n    })\r\n    return gifs;    \r\n\r\n}","import React from 'react'\r\nimport \"animate.css\"\r\n\r\nfunction GiftGridItem({id,title,url}) {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GiftGridItem\r\n","import React  from 'react'\r\nimport { useFetchGift } from '../hooks/useFetchGift';\r\nimport GiftGridItem from './GiftGridItem';\r\n\r\nfunction GiftGrid({category}) {\r\n \r\n    const {data:images,loading}=useFetchGift(category)\r\n   \r\n\r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n        <div className=\"card-grid\">\r\n        {loading&& <p>Cargado</p>}\r\n            {images.map((imagen) =>\r\n                <GiftGridItem key={imagen.id} {...imagen} />\r\n                )}\r\n           \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GiftGrid\r\n","import {useEffect, useState} from \"react\"\r\nimport { getGift } from '../helpers/getIGift';\r\n\r\nexport const useFetchGift= (category) =>{\r\n\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading:true,\r\n    })\r\n\r\n\r\n    useEffect(()=> { \r\n        \r\n        getGift({category}).then( \r\n        imgs => {\r\n            setstate({\r\n            data:imgs,\r\n            loading:false,\r\n\r\n        })\r\n        \r\n            })\r\n    }\r\n        ,[category])\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport AddCategory from './AddCategory';\r\nimport GiftGrid from './GiftGrid';\r\n\r\nfunction GiftExpertApp() {\r\n\r\n    const [categories, setCategories] = useState([\"ONE PUNCH\"]);\r\n    \r\n   // const handleAdd= () =>{\r\n   //     setCategories([...categories,\"Hola\"]);\r\n   // }\r\n    return (\r\n        <>\r\n         <h2> GiftExpertApp</h2>\r\n         <AddCategory setCategories={setCategories}/>\r\n         <hr/>\r\n            {\r\n                categories.map(category => \r\n                    \r\n                    <GiftGrid key={category} category={category}/>\r\n                )\r\n            }\r\n  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default GiftExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GiftExpertApp from './Components/GiftExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(<GiftExpertApp />,document.getElementById('root'));\n"],"sourceRoot":""}